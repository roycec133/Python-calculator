v1.0 â€“ June 5, 2025
-------------------
- First complete version of CLI calculator
- Supported operations: +, -, *, /, //, **
- Input parsing with split()
- Division by zero handling
- Infinite loop with "q" to quit
- Float input support


v1.1.0 - June 7, 2025
---------------------
- Square root (`sqrt`) operation support using `math.sqrt()`
- Input format handler for 2-part operations (e.g., `sqrt 25`)
- Error message for square root of negative numbers
- Refactored calculator logic into an OOP structure using a `Calculation` class
- Updated CLI input handling to support both standard operations and square root
- Improved error handling for input format and value errors
- Corrected division-by-zero logic in `/` and `//` operations
- Fixed variable scope issues inside `calculate()` method

v1.2.0 - June 7, 2025
---------------------
- Added `Trigcalculation` class inheriting from `Calculation` to handle scientific operations
- Implemented trigonometric functions: `sin`, `cos`, and `tan`, using `math.radians()`
- Extended CLI input parser to support trigonometric input (e.g., `sin 30`)
- Improved structure and modularity of code through method overriding and inheritance
- Cleaned up conditional logic for operator parsing and trig dispatch
- Strengthened program stability and maintainability in preparation for GUI integration

v1.3.0 - June 19, 2025
---------------------
- Graphical User Interface (GUI) built with CustomTkinter
- Theme support with three themes: Dark, Light, and Joy Pastel
- Custom math parser for evaluating expressions safely without using eval()
- Calculation engine with correct operator precedence handling (* and / before + and -)
- Support for negative numbers in expressions (e.g., -5 + 3)
- Mouse-based input with clickable buttons in GUI
- Drop-down theme selector to change UI themes in real time
- Error handling for invalid expressions (shows error message instead of crashing)
- Refactored code structure to separate CLI logic, parser logic, and GUI components
- Improved CLI input handling to better support trigonometric functions, square roots, and error cases








